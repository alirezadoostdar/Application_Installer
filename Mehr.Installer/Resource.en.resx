<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorWhileAttachingDataBase" xml:space="preserve">
    <value>Error attaching database</value>
  </data>
  <data name="ErrorWhileCreateNewMehrDirectory" xml:space="preserve">
    <value>Error when creating the program installation folder, the selected path may not exist or an access error may have occurred</value>
  </data>
  <data name="ErrorWhileInstallingSqlserver" xml:space="preserve">
    <value>Error Installing Sqlserver</value>
  </data>
  <data name="ErrorWhileInstallMehr" xml:space="preserve">
    <value>Error nstalling Mehr</value>
  </data>
  <data name="InstallKindComment" xml:space="preserve">
    <value>If it is the first time to install it, it is recommended to stay in the default mode</value>
  </data>
  <data name="InstallKindComment1" xml:space="preserve">
    <value>If you have already used the software and tried to replace Windows and the previous folder is available, select the "Connect to the previous folder" option.</value>
  </data>
  <data name="InstallPathNotInsertError" xml:space="preserve">
    <value>Install Path Not Selected</value>
  </data>
  <data name="InstallSuccessfulMsg" xml:space="preserve">
    <value>Install was Successful</value>
  </data>
  <data name="MehrTitle" xml:space="preserve">
    <value>Mehr {0}</value>
  </data>
  <data name="NewInstanceComment" xml:space="preserve">
    <value>The database server name is an arbitrary name and must be unique.</value>
  </data>
  <data name="NewInstanceComment1" xml:space="preserve">
    <value>If the Mehr software is not already installed on your system, it is recommended to keep it in the default mode (MehrSqlServer).</value>
  </data>
  <data name="NewMehrPathMustBeEmptyError" xml:space="preserve">
    <value>The selected installation location must be empty</value>
  </data>
  <data name="OldInstanceComment" xml:space="preserve">
    <value>Install one or more database servers on your system that you can choose and avoid reinstalling.</value>
  </data>
  <data name="OldMehrPathNotSelectedError" xml:space="preserve">
    <value>The installation path of the previous folder is not selected</value>
  </data>
  <data name="OldPathWrongDataNotfountError" xml:space="preserve">
    <value>The previously selected folder path is wrong. The database file was not found.</value>
  </data>
  <data name="SameInstanceNameErr" xml:space="preserve">
    <value>The database server name is duplicate and is currently installed on the system.</value>
  </data>
  <data name="SomeErrorRunWhileInstallationError" xml:space="preserve">
    <value>An error occurred during the installation operation</value>
  </data>
  <data name="SqlInstanceNotInsertErr" xml:space="preserve">
    <value>The database server name is not entered.</value>
  </data>
  <data name="UnzipFontsFileError" xml:space="preserve">
    <value>Error while extracting fonts</value>
  </data>
  <data name="UnzipMehrFileError" xml:space="preserve">
    <value>Error while extracting software installation files</value>
  </data>
  <data name="UnzipSql64FileError" xml:space="preserve">
    <value>Error while extracting database installation file</value>
  </data>
</root>